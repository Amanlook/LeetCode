LeetCode : Isomorphic string

code:
    class Solution:
        def isIsomorphic(self, s: str, t: str) -> bool:
            if len(s) != len(t):
                return False

            dic = {}
            for i in range(len(s)):
                if s[i] in dic:
                    if dic[s[i]] != t[i]:
                        return False
                else:
                    if t[i] in dic.values():
                        return False
                    dic[s[i]] = t[i]
            return True

----------------------------------------------------------------------------------------------

LeetCode : Best Time to Buy and sell stocks

code : 
        class Solution:
            def maxProfit(self, prices: List[int]) -> int:
                buy = prices[0]
                max_profit = 0
                for i in range(len(prices)):
                    if buy > prices[i]:
                        buy = prices[i]
                    elif (prices[i] - buy) > max_profit:
                        max_profit = prices[i] - buy
                return max_profit
                
------------------------------------------------------------------------------------------------

LeetCode : Merge Strings Alternately

Code : 
    class Solution:
    def mergeAlternately(self, word1: str, word2: str) -> str:
        res = ""
        for i,j in zip(word1,word2):
            res += f"{i}{j}"
        if len(word1)>len(word2):
            res += word1[len(word2):]
        else:
            res += word2[len(word1):]
        return res
        
-------------------------------------------------------------------------------------------------
LeetCode : GCD of strings

code : 
class Solution:
    def gcdOfStrings(self, str1: str, str2: str) -> str:
        if len(str1) < len(str2):
            str1, str2 = str2, str1
        if str1 == str2:
            return str1
        if str1.startswith(str2):
            return self.gcdOfStrings(str2, str1[len(str2):])
        return ""

--------------------------------------------------------------------------------------------------
LeetCode : Kids With the Greatest Number of Candies

Code :
class Solution:
    def kidsWithCandies(self, candies: List[int], extraCandies: int) -> List[bool]:
        max_value = max(candies)
        updated_list = [x + extraCandies >= max_value for x in candies]
        return updated_list

------------------------------------------------------------------------------------------------------
